"""API migration

Revision ID: 75af48d8a6d8
Revises: fda3dcea1c2d
Create Date: 2020-07-09 09:11:26.777054

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '75af48d8a6d8'
down_revision = 'fda3dcea1c2d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('taxon',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('taxon', sa.String(length=255), nullable=True),
    sa.Column('atlas_taxon_id', sa.Integer(), nullable=True),
    sa.Column('alternatives', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('altgenus')
    op.drop_table('genus')
    op.drop_constraint('article_compound_ibfk_2', 'article_compound', type_='foreignkey')
    op.drop_constraint('article_compound_ibfk_1', 'article_compound', type_='foreignkey')
    op.create_foreign_key(None, 'article_compound', 'compound', ['compound_id'], ['id'])
    op.create_foreign_key(None, 'article_compound', 'article', ['article_id'], ['id'])
    op.drop_constraint('checker_article_ibfk_1', 'checker_article', type_='foreignkey')
    op.create_foreign_key(None, 'checker_article', 'article', ['id'], ['id'])
    op.add_column('checker_compound', sa.Column('atlas_taxon_id', sa.Integer(), nullable=True))
    op.drop_constraint('checker_compound_ibfk_1', 'checker_compound', type_='foreignkey')
    op.create_foreign_key(None, 'checker_compound', 'compound', ['id'], ['id'])
    op.drop_column('checker_compound', 'berdy_id')
    op.drop_column('checker_compound', 'mibig_id')
    op.drop_column('checker_compound', 'pubchem_id')
    op.drop_constraint('dataset_ibfk_2', 'dataset', type_='foreignkey')
    op.create_foreign_key(None, 'dataset', 'article', ['last_article_id'], ['id'])
    op.drop_constraint('dataset_article_ibfk_1', 'dataset_article', type_='foreignkey')
    op.drop_constraint('dataset_article_ibfk_2', 'dataset_article', type_='foreignkey')
    op.create_foreign_key(None, 'dataset_article', 'dataset', ['dataset_id'], ['id'])
    op.create_foreign_key(None, 'dataset_article', 'article', ['article_id'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'dataset_article', type_='foreignkey')
    op.drop_constraint(None, 'dataset_article', type_='foreignkey')
    op.create_foreign_key('dataset_article_ibfk_2', 'dataset_article', 'dataset', ['dataset_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('dataset_article_ibfk_1', 'dataset_article', 'article', ['article_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'dataset', type_='foreignkey')
    op.create_foreign_key('dataset_ibfk_2', 'dataset', 'article', ['last_article_id'], ['id'], ondelete='CASCADE')
    op.add_column('checker_compound', sa.Column('pubchem_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('checker_compound', sa.Column('mibig_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('checker_compound', sa.Column('berdy_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'checker_compound', type_='foreignkey')
    op.create_foreign_key('checker_compound_ibfk_1', 'checker_compound', 'compound', ['id'], ['id'], ondelete='CASCADE')
    op.drop_column('checker_compound', 'atlas_taxon_id')
    op.drop_constraint(None, 'checker_article', type_='foreignkey')
    op.create_foreign_key('checker_article_ibfk_1', 'checker_article', 'article', ['id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'article_compound', type_='foreignkey')
    op.drop_constraint(None, 'article_compound', type_='foreignkey')
    op.create_foreign_key('article_compound_ibfk_1', 'article_compound', 'article', ['article_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('article_compound_ibfk_2', 'article_compound', 'compound', ['compound_id'], ['id'], ondelete='CASCADE')
    op.create_table('genus',
    sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('genus', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=False),
    sa.Column('genustype', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=55), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_unicode_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('altgenus',
    sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('genus_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('altgenus', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=True),
    sa.Column('genustype', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=55), nullable=True),
    sa.ForeignKeyConstraint(['genus_id'], ['genus.id'], name='altgenus_ibfk_1'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_unicode_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.drop_table('taxon')
    # ### end Alembic commands ###
